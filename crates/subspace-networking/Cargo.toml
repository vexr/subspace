[package]
name = "subspace-networking"
version = "0.1.0"
authors = [
    "Nazar Mokrynskyi <nazar@mokrynskyi.com>",
    "Shamil Gadelshin <shamilgadelshin@gmail.com>"
]
description = "Networking functionality of Subspace Network, primarily used for DSN (Distributed Storage Network)"
edition.workspace = true
license = "0BSD"
homepage = "https://subspace.network"
repository = "https://github.com/autonomys/subspace"
include = [
    "/src",
    "/Cargo.toml",
]

[dependencies]
async-lock.workspace = true
async-trait.workspace = true
backoff = { workspace = true, features = ["futures", "tokio"] }
bytes.workspace = true
clap = { workspace = true, features = ["color", "derive"] }
derive_more = { workspace = true, features = ["full"] }
event-listener-primitives.workspace = true
fs2.workspace = true
futures.workspace = true
futures-timer.workspace = true
hex.workspace = true
memmap2.workspace = true
multihash = { workspace = true, features = ["scale-codec"] }
nohash-hasher.workspace = true
parity-scale-codec = { workspace = true, features = ["std"] }
parking_lot.workspace = true
pin-project.workspace = true
prometheus-client.workspace = true
rand.workspace = true
schnellru.workspace = true
serde = { workspace = true, features = ["derive"] }
serde_json.workspace = true
subspace-core-primitives.workspace = true
subspace-logging.workspace = true
subspace-metrics.workspace = true
thiserror.workspace = true
tokio = { workspace = true, features = ["macros", "parking_lot", "rt-multi-thread", "signal", "sync", "time"] }
tokio-stream.workspace = true
tracing.workspace = true
unsigned-varint = { workspace = true, features = ["futures", "asynchronous_codec"] }
void.workspace = true
libp2p = { workspace = true, features = ["autonat", "dns", "gossipsub", "identify", "kad", "macros", "metrics", "noise", "ping", "plaintext", "request-response", "serde", "tcp", "tokio", "yamux"] }

[dev-dependencies]
rand.workspace = true
libp2p-swarm-test.workspace = true
