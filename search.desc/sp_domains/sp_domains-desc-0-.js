searchState.loadedDescShard("sp_domains", 0, "Primitives for domains pallet.\nAnyone can operate for this domain.\nAutoId-specific domain runtime config.\nDomain bundle.\nA digest of the bundle\nIdentifier of a chain.\nChannel identity.\nExtrinsics shuffling seed\nActual extrinsic data that is inlined since it is less …\nDomain chains allowlist updates.\nPost hook to know if the domain had bundle submitted in …\nDomains specific digest item.\nUnique identifier of a domain.\n<code>DomainInstanceData</code> is used to construct the genesis …\nTrait to check domain owner.\nConfigurations for specific domain runtime kinds.\nDomain Sudo runtime call.\nAPIs used to access the domains pallet.\nDomains specific digest items.\nTrait that tracks the balances on Domains.\nEmpty extrinsics root.\nType representing domain epoch.\nEVM Domain “update contract creation allowed by” …\nEVM-specific domain runtime config.\nEVM-specific domain type (and associated data).\nReceipt of a domain block execution.\nRepresents the extrinsic either as full data or hash of …\nThe Trie root of all extrinsics included in a bundle.\nExtrinsic Hash.\nType alias for Header hash.\nType alias for Header Hashing.\nType alias for Header number.\nInitial tx range = U256::MAX / INITIAL_DOMAIN_TX_RANGE.\nTransaction is illegal (unable to pay the fee, etc).\n<code>InboxedBundle</code> represents a bundle that was successfully …\nTransaction is an inherent extrinsic.\nBundle invalidity type\nThe <code>estimated_bundle_weight</code> in the bundle header is invalid\nThe field <code>invalid_bundles</code> in <code>ExecutionReceipt</code> is invalid.\nReceipt invalidity type.\nTransaction is an invalid XDM.\nKey type for Operator.\nHook to handle chain rewards.\nA hook to call after a domain is instantiated\nBundle with opaque extrinsics.\nList of <code>OpaqueBundle</code>.\nType that represents an operator allow list for Domains.\nType representing operator ID\nA type that implements <code>BoundToRuntimeAppPublic</code>, used for …\nAn operator authority keypair. Necessarily equivalent to …\nAn operator authority identifier.\nAn operator authority signature.\nOnly the specific operators are allowed to operate the …\nTransaction is out of the tx range.\nPermissioned actions allowed by either specific accounts …\nAn EVM domain with a contract creation allow list.\nAn EVM domain where any account can create contracts.\nType representing the runtime ID.\nTypes of runtime pallet domains currently supports\nHeader of bundle.\nSingleton receipt submit along when there is a gap between …\nStake weight in the domain bundle election.\nType that holds the transfers(in/out) for a given chain.\nFailed to decode the opaque extrinsic.\nChains that are allowed to open a channel with this chain.\nCompute and Domain storage fees are shared across …\nCompute and Domain storage fees are shared across …\nReturn the bundle body size in bytes\nThe Merkle root of all new extrinsics included in this …\nBurned balances on domain chain\nCalculates the max bundle weight and size\nRewards for the chain.\nClaims a rejected transfer between chains.\nConfirms a transfer between chains.\nThe block hash corresponding to <code>consensus_block_number</code>.\nThe block hash corresponding to <code>consensus_block_number</code>.\nA pointer to the consensus block index which contains all …\nA pointer to the consensus block index which contains all …\nReturns the consensus chain byte fee that will used to …\nThe consensus chain storage fee\nReturns the consensus transaction byte fee that will used …\nAccount info on frame_system on Domains\nReturns the current best block number for the domain.\nExtrinsic root field of the header of domain block …\nExtrinsic root field of the header of domain block …\nThe block hash corresponding to <code>domain_block_number</code>.\nThe block hash corresponding to <code>domain_block_number</code>.\nThe index of the current domain block that forms the basis …\nThe index of the current domain block that forms the basis …\nReturns the domain bundle limit of the given domain.\nCalled in the next block initialisation if there was a …\nThe domain execution fee including the storage and compute …\nReturns the domain_id of this bundle.\nReturns the <code>domain_id</code>\nDomain id.\nReturns the domain instance data for the given <code>domain_id</code>.\nReturns the current epoch and the next epoch operators of …\nReturns the current WASM bundle for the given <code>domain_id</code>.\nConfigurations for a specific type of domain runtime, for …\nReturns the domain sudo call for the given domain, if any.\nReturns the current timestamp at the current height.\nTotal issuance storage key for Domains.\nReturns the current Tx range for the given domain Id.\nThe total (estimated) weight of all extrinsics in the …\nReturns the “set contract creation allowed by” call …\nReturns the execution receipt with the given hash.\nList of storage roots collected during the domain block …\nList of storage roots collected during the domain block …\nThe Merkle root of the execution trace for the current …\nThe Merkle root of the execution trace for the current …\nExtracts the bundles successfully stored from the given …\nThe accompanying extrinsics.\nThe accompanying extrinsics.\nReturn the <code>bundle_extrinsics_root</code>\nThe Merkle root of all new extrinsics included in this …\nGenerates a randomness seed for extrinsics shuffling.\nThe final state root for the current domain block …\nThe final state root for the current domain block …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nReturns the genesis state root if not pruned.\nReturns the hash of this header.\nReturns the hash of this header.\nReturns the hash of this bundle.\nReturns the hash of this execution receipt.\nReturns the best execution chain number.\nUnsealed header.\nThe hash of the bundle header\nAll the bundles that being included in the consensus block.\nAll the bundles that being included in the consensus block.\nReturns the initial contract creation allow list, or <code>None</code> …\nInitializes the domain balance\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert a bundle with generic extrinsic to a bundle with …\nConsumes <code>Bundle</code> to extract the execution receipt.\nConsume this <code>SealedSingletonReceipt</code> and return the receipt\nReturns true if the receipt exists and is going to be …\nReturns true if the account is the domain owner.\nReturns true if the given domain’s runtime code has been …\nReturns true if the allow list is either <code>Anyone</code> or the …\nReturns true if the EVM domain is private.\nReturns true if the EVM domain is public.\nReturns the last confirmed domain block execution receipt.\nReturns the latest confirmed domain block number and hash.\nThe max bundle size for the domain.\nThe max bundle weight for the domain.\nCreates a <code>DomainId</code>.\nConstructs a new instance of <code>SealedBundleHeader</code>.\nReturns true if there are any ERs in the challenge period …\nNotes a transfer between chains. Balance on from_chain_id …\nReturns the block number of oldest unconfirmed execution …\nReturn the <code>operator_id</code>\nReturn the <code>operator_id</code>\nOperator index in the OperatorRegistry.\nThe hash of the ER for the last domain block.\nThe hash of the ER for the last domain block.\nReturns the hash of the inner unsealed header.\nReturns the hash of <code>SingletonReceipt</code>\nProof of bundle producer election.\nProof of receipt producer election.\nThe PoT output for <code>slot_number</code>.\nReturn a reference of the execution receipt.\nReturn the receipt\nExecution receipt that should extend the receipt chain or …\nThe receipt to submit\nReturns the execution receipt hash of the given domain and …\nReduces a given amount from the domain balance\nRejects a initiated transfer between chains.\nTotal transfers from this domain that were reverted.\nChains that are not allowed to open a channel with this …\nReturns the runtime id for the given <code>domain_id</code>.\nReturns the list of runtime upgrades in the current block. …\nSealed bundle header.\nSealed bundle header.\nThe storage key of the <code>SelfDomainId</code> storage item in …\nSignature of the bundle.\nSignature of the receipt bundle.\nChecks if the signer Id hash is within the tx range\nA collection of the receipt.\nReturn the bundle size (include header and body) in bytes\nReturn the encode size of <code>SealedSingletonReceipt</code>\nThe size of the bundle body in bytes.\nReturn the <code>slot_number</code> of the <code>proof_of_election</code>\nThe slot number.\nReturns the balance of the storage fund account.\nSubmits the transaction bundle via an unsigned extrinsic.\nDigest storage key in frame_system. Unfortunately, the …\nReturns the current timestamp at the current height.\nConverts the inner integer to little-endian bytes.\nReturns the total fees that was collected and burned on …\nList of transfers from this Domain to other chains\nList of transfers from this Domain to other chains\nTotal transfers that came into the domain.\nTotal transfers that went out of the domain.\nTotal transfers to this domain that were rejected.\nComputes the VRF hash.\nVRF signature.\nAccounts initially allowed to create contracts on a …\nInvalid vrf proof.\nThreshold unsatisfied error.\nReturns the election threshold based on the operator stake …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGenerates a domain-specific vrf transcript from given …\nBase API that every domain runtime must implement.\nReturns the storage root after applying the extrinsic.\nReturns the block digest.\nThe accumulated transaction fee of all transactions …\nReturns the storage key for the <code>CollectedBlockFees</code> on …\nReturns the consumed weight of the block.\nChecks the validity of array of extrinsics + pre_dispatch …\nReturns an encoded extrinsic to set domain transaction …\nReturns an extrinsic to update chain allowlist.\nReturns an encoded extrinsic aiming to upgrade the runtime …\nReturns an encoded extrinsic to set timestamp.\nDecodes the domain specific extrinsic from the opaque …\nDecodes a list of domain extrinsics from opaque …\nExtracts the optional signer per extrinsic.\nExtract signer of a given list of extrinsic if all of them …\nReturns extrinsic Era if present.\nReturns the extrinsic weight.\nReturns the sum of a given set of extrinsics weight.\nFind the first inherent extrinsic\nReturns the storage root after initializing the block.\nReturns true if the extrinsic is an inherent extrinsic.\nReturns the transfers for this domain in the block.\nReturns the storage key for the Transfers on Domain.\nShuffles the extrinsics in a deterministic way.\nMerkle proof using <code>Blake2b256Algorithm</code>.\nMerkle tree using <code>Blake2b256Algorithm</code>.\nMerke proof based Witness.\nConstructs a merkle tree from given authorities.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIndex of the leaf the proof is for.\nNumber of leaves in the original tree.\nMerkle proof in bytes.\nFailed to decode value.\nEmits when the given storage proof is invalid.\nValue doesn’t exist in the Db for the given key.\nType that provides utilities to generate the storage proof.\nType that provides utilities to verify the storage proof.\nStorage proof contains unused nodes after reading the …\nVerification error.\nConstructs the storage key from a given enumerated index.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGenerate storage proof for given index from the trie …\nReturns the value against a given key. Note: Storage proof …\nExtracts the value against a given key and returns a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRaw storage content for genesis block\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a mutable reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nGet a reference to the inner from the outer.\nConstruct <code>RawGenesis</code> from a given storage NOTE: This …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert <code>RawGenesis</code> to storage, the opposite of <code>from_storage</code>\nThis is a modified version of trie root that takes trie …")